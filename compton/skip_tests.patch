diff -Naur compton-7-rc1/meson.build compton-7-rc1-new/meson.build
--- compton-7-rc1/meson.build	2019-07-07 21:17:18.707193284 +0200
+++ compton-7-rc1-new/meson.build	2019-07-07 21:17:30.515381919 +0200
@@ -61,8 +61,6 @@
 	endif
 endforeach
 
-test_h_dep = subproject('test.h').get_variable('test_h_dep')
-
 subdir('src')
 subdir('man')
 
diff -Naur compton-7-rc1/src/compton.c compton-7-rc1-new/src/compton.c
--- compton-7-rc1/src/compton.c	2019-07-07 21:17:18.707193284 +0200
+++ compton-7-rc1-new/src/compton.c	2019-07-07 21:17:30.515381919 +0200
@@ -26,7 +26,7 @@
 #include <xcb/xinerama.h>
 
 #include <ev.h>
-#include <test.h>
+// #include <test.h>
 
 #include "common.h"
 #include "compiler.h"
diff -Naur compton-7-rc1/src/meson.build compton-7-rc1-new/src/meson.build
--- compton-7-rc1/src/meson.build	2019-07-07 21:17:18.707193284 +0200
+++ compton-7-rc1-new/src/meson.build	2019-07-07 21:17:30.516381935 +0200
@@ -77,7 +77,7 @@
 subdir('backend')
 
 compton = executable('compton', srcs, c_args: cflags,
-  dependencies: [ base_deps, deps, test_h_dep ],
+  dependencies: [ base_deps, deps ],
   install: true, include_directories: compton_inc)
 
 if get_option('unittest')
diff -Naur compton-7-rc1/src/string_utils.c compton-7-rc1-new/src/string_utils.c
--- compton-7-rc1/src/string_utils.c	2019-07-07 21:17:18.708193300 +0200
+++ compton-7-rc1-new/src/string_utils.c	2019-07-07 21:17:30.516381935 +0200
@@ -3,7 +3,7 @@
 
 #include <string.h>
 
-#include <test.h>
+// #include <test.h>
 
 #include "compiler.h"
 #include "string_utils.h"
@@ -35,19 +35,19 @@
 	return str;
 }
 
-TEST_CASE(mstrjoin) {
-	char *str = mstrjoin("asdf", "qwer");
-	TEST_STREQUAL(str, "asdfqwer");
-	free(str);
-
-	str = mstrjoin("", "qwer");
-	TEST_STREQUAL(str, "qwer");
-	free(str);
-
-	str = mstrjoin("asdf", "");
-	TEST_STREQUAL(str, "asdf");
-	free(str);
-}
+// TEST_CASE(mstrjoin) {
+// 	char *str = mstrjoin("asdf", "qwer");
+// 	TEST_STREQUAL(str, "asdfqwer");
+// 	free(str);
+// 
+// 	str = mstrjoin("", "qwer");
+// 	TEST_STREQUAL(str, "qwer");
+// 	free(str);
+// 
+// 	str = mstrjoin("asdf", "");
+// 	TEST_STREQUAL(str, "asdf");
+// 	free(str);
+// }
 
 /**
  * Concatenate a string on heap with another string.
@@ -67,18 +67,18 @@
 	(*psrc1)[len - 1] = '\0';
 }
 
-TEST_CASE(mstrextend) {
-	char *str1 = NULL;
-	mstrextend(&str1, "asdf");
-	TEST_STREQUAL(str1, "asdf");
-
-	mstrextend(&str1, "asd");
-	TEST_STREQUAL(str1, "asdfasd");
-
-	mstrextend(&str1, "");
-	TEST_STREQUAL(str1, "asdfasd");
-	free(str1);
-}
+// TEST_CASE(mstrextend) {
+// 	char *str1 = NULL;
+// 	mstrextend(&str1, "asdf");
+// 	TEST_STREQUAL(str1, "asdf");
+// 
+// 	mstrextend(&str1, "asd");
+// 	TEST_STREQUAL(str1, "asdfasd");
+// 
+// 	mstrextend(&str1, "");
+// 	TEST_STREQUAL(str1, "asdfasd");
+// 	free(str1);
+// }
 
 #pragma GCC diagnostic pop
 
@@ -113,17 +113,17 @@
 	return ret * neg;
 }
 
-TEST_CASE(strtod_simple) {
-	const char *end;
-	double result = strtod_simple("1.0", &end);
-	TEST_EQUAL(result, 1);
-	TEST_EQUAL(*end, '\0');
-
-	result = strtod_simple("-1.0", &end);
-	TEST_EQUAL(result, -1);
-	TEST_EQUAL(*end, '\0');
-
-	result = strtod_simple("+.5", &end);
-	TEST_EQUAL(result, 0.5);
-	TEST_EQUAL(*end, '\0');
-}
+// TEST_CASE(strtod_simple) {
+// 	const char *end;
+// 	double result = strtod_simple("1.0", &end);
+// 	TEST_EQUAL(result, 1);
+// 	TEST_EQUAL(*end, '\0');
+// 
+// 	result = strtod_simple("-1.0", &end);
+// 	TEST_EQUAL(result, -1);
+// 	TEST_EQUAL(*end, '\0');
+// 
+// 	result = strtod_simple("+.5", &end);
+// 	TEST_EQUAL(result, 0.5);
+// 	TEST_EQUAL(*end, '\0');
+// }
diff -Naur compton-7-rc1/src/utils.h compton-7-rc1-new/src/utils.h
--- compton-7-rc1/src/utils.h	2019-07-07 21:17:18.708193300 +0200
+++ compton-7-rc1-new/src/utils.h	2019-07-07 21:17:30.516381935 +0200
@@ -12,7 +12,7 @@
 #include <string.h>
 #include <unistd.h>
 
-#include <test.h>
+// #include <test.h>
 
 #include "compiler.h"
 
